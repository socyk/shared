--[[  

made by #ilikediscontinuing

]]--

getgenv().antilog = {
    allowprint = true,
    stoprequest = true, -- use for filthy webhook loggers ew (might break some scripts)
    whitelisted = {
        enabled = true,
        whitelisted = {
            "githubusercontent",
            "pastebin",
        },
    },
    blacklist = {
        enabled = true,
        blacklisted = {
            "ip",
        },
    },
}

local function iswhitelisted(url)
    for i,v in ipairs(getgenv().antilog.whitelisted.whitelisted) do
        if string.find(url, v) then
            return true
        end
    end
    return false
end

local function isblacklisted(url)
    for i,v in ipairs(getgenv().antilog.blacklist.blacklisted) do
        if string.find(url, v) then
            return true
        end
    end
    return false
end

local mt = getrawmetatable(game)
setreadonly(mt, false)
local oldnamecall = mt.__namecall
mt.__namecall = newcclosure(function(self, ...)
    local args = {...}
    local method = getnamecallmethod()
    if method == "HttpGet" or method == "HttpPost" or method == "RequestAsync" then
        local url = (method == "RequestAsync" and args[1] and args[1].Url) or args[1]
        if url then
            if getgenv().antilog.whitelisted.enabled and not iswhitelisted(url) then
                if getgenv().antilog.allowprint then
                    print("intercepted link (whitelist):", url)
                end
                return task.wait(9e9)
            end
            if getgenv().antilog.blacklist.enabled and isblacklisted(url) then
                if getgenv().antilog.allowprint then
                    print("intercepted link (blacklist):", url)
                end
                return task.wait(9e9)
            end
        end
    end
    return oldnamecall(self, ...)
end)
setreadonly(mt, true)

if getgenv().antilog.stoprequest then
    local old
    old = hookfunction(request, function(table)
        if table.Url then
            if getgenv().antilog.whitelisted.enabled and not iswhitelisted(table.Url) then
                if getgenv().antilog.allowprint then
                    print("intercepted link (whitelist):", table.Url)
                end
                return task.wait(9e9)
            end
            if getgenv().antilog.blacklist.enabled and isblacklisted(table.Url) then
                if getgenv().antilog.allowprint then
                    print("intercepted link (blacklist):", table.Url)
                end
                return task.wait(9e9)
            end
        end
        return old(table)
    end)
end

print("anti log loaded...")
